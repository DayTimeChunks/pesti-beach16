Sys.setlocale("LC_ALL", "English")
MAC = T
WIN = F
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
SAVE = F
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
# comp.d13C.SE = comp.d13C.SD / sqrt(N_compsoil),
)
View(sumIS)
high = subset(sumIS, det.d13C.SD  > 0.7)
View(high)
high = subset(sumIS, det.d13C.SD  > 0.7 & N_detsoil > 3)
rev = merge(high, is, by = "ID")
View(rev)
rev = merge(high, is, by = "ID", all = F)
high = subset(sumIS, det.d13C.SD  > 0.7 & N_detsoil > 2)
is = read.csv("DetailIsotopes.csv")
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
# comp.d13C.SE = comp.d13C.SD / sqrt(N_compsoil),
)
ci = merge(co, sumIS, by = "ID", all = T)
View(ci)
View(time)
ci$Date = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
ci = merge(co, sumIS, by = "ID", all = T)
ci$Date = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(Sampled))
View(ci)
ci = subset(ci, !is.na(ci$Sampled))
ci = subset(ci, !is.na(ci$Date))
ci = ci[, c("Date", "ID", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "Date", all = T)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$Date))
ci = ci[, c("DayMoYr", "ID", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "DayMoYr", all = T)
View(detailed)
View(detailed)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$Date))
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
ci = ci[, c("DayMoYr", "ID", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "DayMoYr", all = T)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
N1 = subset(ci, Transect == "N" & Plot == 1)
View(N1)
ci$Plot = paste(ci$Transect, ci$Plot, sep = "-")
ci = ci[, c("DayMoYr", "ID", "Pot", "ug.g", "det.d13C", "det.d13C.SD")]
ci = ci[, c("DayMoYr", "ID", "Pot", "ug.g", "det.d13C", "det.d13C.SD")]
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
ci$Plot = paste(ci$Transect, ci$Plot, sep = "-")
ci = ci[, c("DayMoYr", "ID", "Plot", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "DayMoYr", all = T)
N1 = subset(detailed, is.na(Plot) | Plot == "N-1")
N1 = subset(detailed, is.na(Plot) | Plot == "N-1")
N2 = subset(detailed, is.na(Plot) | Plot == "N-2")
N3 = subset(detailed, is.na(Plot) | Plot == "N-3")
N4 = subset(detailed, is.na(Plot) | Plot == "N-4")
N5 = subset(detailed, is.na(Plot) | Plot == "N-5")
N6 = subset(detailed, is.na(Plot) | Plot == "N-7")
N7 = subset(detailed, is.na(Plot) | Plot == "N-8")
T4 = subset(detailed, is.na(Plot) | Plot == "T-4")
T5 = subset(detailed, is.na(Plot) | Plot == "T-5")
T7 = subset(detailed, is.na(Plot) | Plot == "T-7")
T8 = subset(detailed, is.na(Plot) | Plot == "T-8")
T9 = subset(detailed, is.na(Plot) | Plot == "T-9")
T10 = subset(detailed, is.na(Plot) | Plot == "T-10")
S11 = subset(detailed, is.na(Plot) | Plot == "S-11")
S12 = subset(detailed, is.na(Plot) | Plot == "S-12")
S13 = subset(detailed, is.na(Plot) | Plot == "S-13")
View(S13)
plots = list(N1, N2, N3)
SAVE = T
if (SAVE) {
for (d in plots) {
print(d)
# write.table(d, "BEACH_R/N1.tss", sep="\t", row.names = F)
}
}
SAVE = T
counter = 0
if (SAVE) {
for (d in plots) {
counter = counter + 1
if (counter < 8) {
name = paste("N", str(counter), ".tss")
} else if (counter < 14) {
name = paste("T", str(counter), ".tss")
} else {
name = paste("S", str(counter), ".tss")
}
write.table(d, "BEACH_R/" + name, sep="\t", row.names = F)
}
}
SAVE = T
counter = 0
if (SAVE) {
for (d in plots) {
counter = counter + 1
if (counter < 8) {
name = paste("N", str(counter), ".tss")
} else if (counter < 14) {
name = paste("T", str(counter), ".tss")
} else {
name = paste("S", str(counter), ".tss")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
SAVE = T
counter = 0
if (SAVE) {
for (d in plots) {
counter = counter + 1
if (counter < 8) {
name = paste("N", str(counter), ".tss")
print(name)
} else if (counter < 14) {
name = paste("T", str(counter), ".tss")
} else {
name = paste("S", str(counter), ".tss")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
SAVE = T
counter = 0
if (SAVE) {
for (d in plots) {
counter = counter + 1
if (counter < 8) {
name = paste("N", str(counter), ".tss", sep = "")
print(name)
} else if (counter < 14) {
name = paste("T", str(counter), ".tss")
} else {
name = paste("S", str(counter), ".tss")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
SAVE = T
counter = 0
if (SAVE) {
for (d in plots) {
counter = counter + 1
if (counter < 8) {
name = paste("N", as.character(counter), ".tss", sep = "")
print(name)
} else if (counter < 14) {
name = paste("T", str(counter), ".tss")
} else {
name = paste("S", str(counter), ".tss")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
N1 = subset(detailed, is.na(Plot) | Plot == "N-1")
N2 = subset(detailed, is.na(Plot) | Plot == "N-2")
N3 = subset(detailed, is.na(Plot) | Plot == "N-3")
N4 = subset(detailed, is.na(Plot) | Plot == "N-4")
N5 = subset(detailed, is.na(Plot) | Plot == "N-5")
N7 = subset(detailed, is.na(Plot) | Plot == "N-7")
N8 = subset(detailed, is.na(Plot) | Plot == "N-8")
T4 = subset(detailed, is.na(Plot) | Plot == "T-4")
T5 = subset(detailed, is.na(Plot) | Plot == "T-5")
T7 = subset(detailed, is.na(Plot) | Plot == "T-7")
T8 = subset(detailed, is.na(Plot) | Plot == "T-8")
T9 = subset(detailed, is.na(Plot) | Plot == "T-9")
T10 = subset(detailed, is.na(Plot) | Plot == "T-10")
S11 = subset(detailed, is.na(Plot) | Plot == "S-11")
S12 = subset(detailed, is.na(Plot) | Plot == "S-12")
S13 = subset(detailed, is.na(Plot) | Plot == "S-13")
plots = list(N1, N2, N3, N4, N5, N7, N8,
T4, T5, T7, T8, T9, T10,
S11, S12, S13)
SAVE = T
counter = 0
if (SAVE) {
for (d in plots) {
counter = counter + 1
if (counter < 8) {
name = paste("N", as.character(counter), ".tss", sep = "")
print(name)
} else if (counter < 14) {
name = paste("T", as.character(counter), ".tss", sep = "")
} else {
name = paste("S", as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
nor = list(N1, N2, N3, N4, N5, N7, N8)
val = list(T4, T5, T7, T8, T9, T10)
sou = list(S11, S12, S13)
if (SAVE) {
counter = 0
for (d in nor) {
counter = counter + 1
transect = "N"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
counter = 3
for (d in val) {
counter = counter + 1
transect = "T"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
for (d in val) {
counter = counter + 1
transect = "T"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
SAVE = T
if (SAVE) {
counter = 0
for (d in nor) {
counter = counter + 1
transect = "N"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
counter = 3
for (d in val) {
counter = counter + 1
transect = "T"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
SAVE = T
if (SAVE) {
counter = 0
for (d in nor) {
counter = counter + 1
transect = "N"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
counter = 3
for (d in val) {
counter = counter + 1
transect = "T"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
counter = 10
for (d in sou) {
counter = counter + 1
transect = "S"
name = paste(transect, as.character(counter), ".tss", sep = "")
write.table(d, paste("BEACH_R/", name), sep="\t", row.names = F)
}
}
View(S12)
View(S13)
View(S11)
Sys.setlocale("LC_ALL", "English")
MAC = T
WIN = F
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
SAVE = F
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
ci$Plot = paste(ci$Transect, ci$Plot, sep = "-")
ci = ci[, c("DayMoYr", "ID", "Plot", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "DayMoYr", all = T)
N1 = subset(detailed, is.na(Plot) | Plot == "N-1")
N2 = subset(detailed, is.na(Plot) | Plot == "N-2")
N3 = subset(detailed, is.na(Plot) | Plot == "N-3")
N4 = subset(detailed, is.na(Plot) | Plot == "N-4")
N5 = subset(detailed, is.na(Plot) | Plot == "N-5")
N7 = subset(detailed, is.na(Plot) | Plot == "N-7")
N8 = subset(detailed, is.na(Plot) | Plot == "N-8")
T4 = subset(detailed, is.na(Plot) | Plot == "T-4")
T5 = subset(detailed, is.na(Plot) | Plot == "T-5")
T7 = subset(detailed, is.na(Plot) | Plot == "T-7")
T8 = subset(detailed, is.na(Plot) | Plot == "T-8")
T9 = subset(detailed, is.na(Plot) | Plot == "T-9")
T10 = subset(detailed, is.na(Plot) | Plot == "T-10")
S11 = subset(detailed, is.na(Plot) | Plot == "S-11")
S12 = subset(detailed, is.na(Plot) | Plot == "S-12")
S13 = subset(detailed, is.na(Plot) | Plot == "S-13")
nor = list(N1, N2, N3, N4, N5, N7, N8)
val = list(T4, T5, T7, T8, T9, T10)
sou = list(S11, S12, S13)
SAVE = T
if (SAVE) {
counter = 0
for (d in nor) {
counter = counter + 1
transect = "N"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name, sep = ""), sep="\t", row.names = F)
}
counter = 3
for (d in val) {
counter = counter + 1
transect = "T"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name, sep = ""), sep="\t", row.names = F)
}
counter = 10
for (d in sou) {
counter = counter + 1
transect = "S"
name = paste(transect, as.character(counter), ".tss", sep = "")
write.table(d, paste("BEACH_R/", name, sep = ""), sep="\t", row.names = F)
}
}
