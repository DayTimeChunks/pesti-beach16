njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
if (length(is) == 1) {
is = read.csv("DetailIsotopes.csv", sep = ";")
}
if (length(co) == 1) {
co = read.csv("DetailConc.csv")
}
is = subset(is, !is.na(d13C))
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
sumIS = subset(sumIS, N_detsoil > 2)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
ci$Plot = paste(ci$Transect, ci$Plot, sep = "-")
ci = ci[, c("DayMoYr", "ID", "Plot", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "DayMoYr", all = T)
Sys.setlocale("LC_ALL", "English")
MAC = F
WIN = F
SAVE = T
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
if (length(is) == 1) {
is = read.csv("DetailIsotopes.csv", sep = ";")
}
if (length(co) == 1) {
co = read.csv("DetailConc.csv")
}
is = subset(is, !is.na(d13C))
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
sumIS = subset(sumIS, N_detsoil > 2 && det.d13C.SD < 0.8)
Sys.setlocale("LC_ALL", "English")
MAC = F
WIN = F
SAVE = T
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
if (length(is) == 1) {
is = read.csv("DetailIsotopes.csv", sep = ";")
}
if (length(co) == 1) {
co = read.csv("DetailConc.csv")
}
is = subset(is, !is.na(d13C))
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
sumIS = subset(sumIS, N_detsoil > 2 & det.d13C.SD < 0.8)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
ci$Plot = paste(ci$Transect, ci$Plot, sep = "-")
ci = ci[, c("DayMoYr", "ID", "Plot", "ug.g", "det.d13C", "det.d13C.SD")]
detailed = merge(time, ci, by = "DayMoYr", all = T)
N1 = subset(detailed, is.na(Plot) | Plot == "N-1")
N2 = subset(detailed, is.na(Plot) | Plot == "N-2")
N3 = subset(detailed, is.na(Plot) | Plot == "N-3")
N4 = subset(detailed, is.na(Plot) | Plot == "N-4")
N5 = subset(detailed, is.na(Plot) | Plot == "N-5")
N7 = subset(detailed, is.na(Plot) | Plot == "N-7")
N8 = subset(detailed, is.na(Plot) | Plot == "N-8")
T4 = subset(detailed, is.na(Plot) | Plot == "T-4")
T5 = subset(detailed, is.na(Plot) | Plot == "T-5")
T7 = subset(detailed, is.na(Plot) | Plot == "T-7")
T8 = subset(detailed, is.na(Plot) | Plot == "T-8")
T9 = subset(detailed, is.na(Plot) | Plot == "T-9")
T10 = subset(detailed, is.na(Plot) | Plot == "T-10")
S11 = subset(detailed, is.na(Plot) | Plot == "S-11")
S12 = subset(detailed, is.na(Plot) | Plot == "S-12")
S13 = subset(detailed, is.na(Plot) | Plot == "S-13")
nor = list(N1, N2, N3, N4, N5, N7, N8)
val = list(T4, T5, T7, T8, T9, T10)
sou = list(S11, S12, S13)
if (SAVE) {
counter = 0
for (d in nor) {
counter = counter + 1
transect = "N"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name, sep = ""), sep="\t", row.names = F)
}
counter = 3
for (d in val) {
counter = counter + 1
transect = "T"
if (counter < 6) {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
else if (counter == 6) {
counter = counter + 1
name = paste(transect, as.character(counter), ".tss", sep = "")
} else {
name = paste(transect, as.character(counter), ".tss", sep = "")
}
write.table(d, paste("BEACH_R/", name, sep = ""), sep="\t", row.names = F)
}
counter = 10
for (d in sou) {
counter = counter + 1
transect = "S"
name = paste(transect, as.character(counter), ".tss", sep = "")
write.table(d, paste("BEACH_R/", name, sep = ""), sep="\t", row.names = F)
}
}
Sys.setlocale("LC_ALL", "English")
MAC = F
WIN = F
SAVE = T
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
if (length(is) == 1) {
is = read.csv("DetailIsotopes.csv", sep = ";")
}
if (length(co) == 1) {
co = read.csv("DetailConc.csv")
}
is = subset(is, !is.na(d13C))
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
sumIS = subset(sumIS, N_detsoil > 1 & det.d13C.SD < 0.8)
ci = merge(co, sumIS, by = "ID", all = T)
ci$DayMoYr = as.POSIXct(strptime(ci$Sampled, "%d/%m/%Y", tz="EST"))
ci = subset(ci, !is.na(ci$DayMoYr))
ci$Plot = paste(ci$Transect, ci$Plot, sep = "-")
ci = ci[, c("DayMoYr", "ID", "Plot", "ug.g", "det.d13C", "det.d13C.SD")]
Sys.setlocale("LC_ALL", "English")
MAC = F
WIN = F
SAVE = T
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
if (SAVE) {
write.table(njd, "BEACH_R/north.tss", sep="\t", row.names = F)
write.table(vjd, "BEACH_R/valley.tss", sep="\t", row.names = F)
write.table(sjd, "BEACH_R/south.tss", sep="\t", row.names = F)
}
co = read.csv("DetailConc.csv")
is = read.csv("DetailIsotopes.csv")
if (length(is) == 1) {
is = read.csv("DetailIsotopes.csv", sep = ";")
}
if (length(co) == 1) {
co = read.csv("DetailConc.csv")
}
is = subset(is, !is.na(d13C))
View(is)
# Same procedure as in Book 06_MassSoils_Composite
siso <- is[, c("ID", "d13C")]
sumIS = ddply(siso, c("ID"),
summarise,
N_detsoil = length(d13C),
det.d13C = mean(d13C),
det.d13C.SD = sd(d13C)
)
sumIS = subset(sumIS, N_detsoil > 1 & det.d13C.SD < 0.8)
Sys.setlocale("LC_ALL", "English")
MAC = F
WIN = F
SAVE = T
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
View(s)
var(s$Conc.mug.g.dry.soil*1/10**6)
var(s$Conc.mug.g.dry.soil)
sd(s$Conc.mug.g.dry.soil)
sd(s$Conc.mug.g.dry.soil)**2
var(s$Conc.mug.g.dry.soil)
mean(s$Conc.mug.g.dry.soil)
mean(north$$Conc.mug.g.dry.soil)
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
mean(north$Conc.mug.g.dry.soil)
mean(valley$Conc.mug.g.dry.soil)
mean(south$Conc.mug.g.dry.soil)
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
View(njd)
northConc_tss = njd[, c("Jdays", "Conc.mug.g.dry.soil")]
View(northConc_tss)
norConc_tss = njd[, c("Jdays", "Conc.mug.g.dry.soil")]
souConc_tss = vjd[, c("Jdays", "Conc.mug.g.dry.soil")]
valConc_tss = sjd[, c("Jdays", "Conc.mug.g.dry.soil")]
View(souConc_tss)
norConc_tss = njd[, c("Jdays", "Conc.mug.g.dry.soil")]
valConc_tss = vjd[, c("Jdays", "Conc.mug.g.dry.soil")]
souConc_tss = sjd[, c("Jdays", "Conc.mug.g.dry.soil")]
Sys.setlocale("LC_ALL", "English")
MAC = F
WIN = F
SAVE = T
if (MAC) {
if (WIN){
path = file.path("C:/Users/DayTimeChunks/Documents/PhD/HydrologicalMonitoring")
} else {
# path = file.path("/Users/DayTightChunks/Documents/PhD/HydrologicalMonitoring")
path = file.path("/Users/DayTightChunks/Documents/PhD/HydroMonitor/.nosync/HydrologicalMonitoring")
time = read.csv2("/Users/DayTightChunks/Documents/PhD/Models/.nosync/pesti-beach16/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
} else {
path = file.path("D:/Documents/these_pablo/Alteckendorf2016/HydrologicalMonitoring")
time = read.csv2("D:/Documents/these_pablo/Models/BEACH2016/Analysis/Data/Time.csv")
time$DayMoYr = as.POSIXct(strptime(time$Date, "%d/%m/%Y", tz="EST"))
}
# Lab parameters and field constants
source(file.path(path, "global.R"))
# Plotting functions
library("scales")
library("tidyr")
library("reshape")
library("zoo") # na.approx()
library("plyr")
library("dplyr")
# setwd("D:/Documents/these_pablo/Alteckendorf2016/R")
# MAC
# setwd("/Users/DayTightChunks/Documents/PhD/Routput/Alteck/R")
# Mac-WIN
# setwd("C:/Users/DayTightChunks/Documents/Models/pesti-beach16/Analysis/Data")
getwd()
s = read.csv2(file.path(path, "Data/MonitoringScopeSoils_R.csv"))
#q$Date = as.POSIXct(strptime(q$DateCheck, "%d/%m/%Y %H:%M", tz="EST"))
s$DayMoYr = as.POSIXct(strptime(s$Date.Soil, "%d/%m/%Y", tz="EST"))
north = subset(s, Transect == "N")
valley = subset(s, Transect == "T")
south = subset(s, Transect == "S")
mean(north$Conc.mug.g.dry.soil)
mean(valley$Conc.mug.g.dry.soil)
mean(south$Conc.mug.g.dry.soil)
njd = merge(time, north, by = "DayMoYr", all = T)
vjd = merge(time, valley, by = "DayMoYr", all = T)
sjd = merge(time, south, by = "DayMoYr", all = T)
norConc_tss = njd[, c("Jdays", "Conc.mug.g.dry.soil")]
valConc_tss = vjd[, c("Jdays", "Conc.mug.g.dry.soil")]
souConc_tss = sjd[, c("Jdays", "Conc.mug.g.dry.soil")]
if (SAVE) {
write.table(njd, "north.tss", sep="\t", row.names = F)
write.table(vjd, "valley.tss", sep="\t", row.names = F)
write.table(sjd, "south.tss", sep="\t", row.names = F)
write.table(norConc_tss, "northConc.tss", sep="\t", row.names = F)
write.table(valConc_tss, "valleyConc.tss", sep="\t", row.names = F)
write.table(souConc_tss, "southConc.tss", sep="\t", row.names = F)
}
norConc_tss$Conc.mug.g.dry.soil = ifelse(is.na(norConc_tss$Conc.mug.g.dry.soil), -1, norConc_tss$Conc.mug.g.dry.soil)
View(norConc_tss)
valConc_tss$Conc.mug.g.dry.soil = ifelse(is.na(valConc_tss$Conc.mug.g.dry.soil), -1, valConc_tss$Conc.mug.g.dry.soil)
souConc_tss$Conc.mug.g.dry.soil = ifelse(is.na(souConc_tss$Conc.mug.g.dry.soil), -1, souConc_tss$Conc.mug.g.dry.soil)
View(valConc_tss)
if (SAVE) {
write.table(njd, "north.tss", sep="\t", row.names = F)
write.table(vjd, "valley.tss", sep="\t", row.names = F)
write.table(sjd, "south.tss", sep="\t", row.names = F)
write.table(norConc_tss, "northConc.tss", sep="\t", row.names = F)
write.table(valConc_tss, "valleyConc.tss", sep="\t", row.names = F)
write.table(souConc_tss, "southConc.tss", sep="\t", row.names = F)
}
View(njd)
norDelta_tss = njd[, c("Jdays", "comp.d13C")]
valDelta_tss = vjd[, c("Jdays", "comp.d13C")]
souDelta_tss = sjd[, c("Jdays", "comp.d13C")]
norDelta_tss$comp.d13C = ifelse(is.na(norDelta_tss$comp.d13C), 0, norDelta_tss$comp.d13C)
valDelta_tss$comp.d13C = ifelse(is.na(valDelta_tss$comp.d13C), 0, valDelta_tss$comp.d13C)
souDelta_tss$comp.d13C = ifelse(is.na(souDelta_tss$comp.d13C), 0, souDelta_tss$comp.d13C)
View(norDelta_tss)
if (SAVE) {
write.table(njd, "north.tss", sep="\t", row.names = F)
write.table(vjd, "valley.tss", sep="\t", row.names = F)
write.table(sjd, "south.tss", sep="\t", row.names = F)
write.table(norConc_tss, "northConc.tss", sep="\t", row.names = F)
write.table(valConc_tss, "valleyConc.tss", sep="\t", row.names = F)
write.table(souConc_tss, "southConc.tss", sep="\t", row.names = F)
write.table(norDelta_tss, "northDelta.tss", sep="\t", row.names = F)
write.table(valDelta_tss, "valleyDelta.tss", sep="\t", row.names = F)
write.table(souDelta_tss, "southDelta.tss", sep="\t", row.names = F)
}
